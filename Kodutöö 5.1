Binaarpuu andmestruktuur

Allpool on Binaarpuu andmestruktuur pyhtoni keeles

class Node:
    def __init__(self, key):
        self.left = None
        self.right = None
        self.val = key
# klass defineerib binaarpuu sõlme. Iga sõlm sisaldab väärtust (val), viidet vasakule alampuule (left) ja viidet paremale alampuule (right).

class BinaryTree:
    def __init__(self):
        self.root = None

# klass esindab binaarpuud. Alguses on puu tühi, seega root on None.

    def insert(self, key):
        self.root = self._insert(self.root, key)

    def _insert(self, root, key):
        if root is None:
            return Node(key)
        else:
            if key < root.val:
                root.left = self._insert(root.left, key)
            else:
                root.right = self._insert(root.right, key)
        return root

 # insert meetod lisab uue elemendi puusse. See kutsub _insert meetodit, mis rekursiivselt liigub puu allapoole, kuni leitakse õige koht uue elemendi lisamiseks.    

    def inorder_traversal(self):
        result = []
        self._inorder_traversal(self.root, result)
        return result

    def _inorder_traversal(self, root, result):
        if root:
            self._inorder_traversal(root.left, result)
            result.append(root.val)
            self._inorder_traversal(root.right, result)
            
# inorder_traversal meetod tagastab puu elemendid inorder järjestuses. See kasutab _inorder_traversal meetodit, mis rekursiivselt liigub puu kaudu ja kogub elemendid järjestatud järjendisse (result).


# Näide kasutamisest
if __name__ == "__main__":
    # Loo binaarpuu
    tree = BinaryTree()
    tree.insert(50)
    tree.insert(30)
    tree.insert(70)
    tree.insert(20)
    tree.insert(40)
    tree.insert(60)
    tree.insert(80)

    # Inorder läbimine annab tulemuseks järjestatud elemendid
    result = tree.inorder_traversal()
    print("Inorder traversal:", result)

# See osa loob binaarpuu, lisab mõned elemendid ja kuvab nende inorder läbimise tulemused. Näites saate näha, kuidas elemendid 20, 30, 40, 50, 60, 70 ja 80 kuvatakse järjestatud kujul.
